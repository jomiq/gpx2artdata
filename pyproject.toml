[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gpx2artdata"
dynamic = ["version"]
description = 'Convert gpx file to excel for easy upload to artdatabanken.'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Jon Mihkkal Inga", email = "jon.mihkkal.inga@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["gpxpy", "lxml"]

[project.optional-dependencies]
server = ["fastapi", "gpxpy", "jinja2"]
dev = ["gpx2artdata[server]", "ruff", "pytest", "pre-commit", "hatch", "git-changelog"]
build = ["pillow", "moviepy", "joblib"]

[project.urls]
Documentation = "https://github.com/jomiq/gpx2artdata#readme"
Issues = "https://github.com/jomiq/gpx2artdata/issues"
Source = "https://github.com/jomiq/gpx2artdata"

[tool.git-changelog]
bump = "minor"
convention = "basic"
in-place = false
marker-line = "<!-- insertion marker -->"
output = "CHANGELOG.md"
parse-refs = false
parse-trailers = false
provider = "github"
repository = "."
sections = "add,fix,change,remove"
template = "keepachangelog"
version-regex = "^## \\\\[(?P<version>v?[^\\\\]]+)"
versioning = "semver"
zerover = true

[tool.hatch.version]
path = "src/gpx2artdata/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/gpx2artdata tests}"

[tool.coverage.run]
source_pkgs = ["gpx2artdata", "tests"]
branch = true
parallel = true
omit = [
  "src/gpx2artdata/__about__.py",
]

[tool.coverage.paths]
gpx2artdata = ["src/gpx2artdata", "*/gpx2artdata/src/gpx2artdata"]
tests = ["tests", "*/gpx2artdata/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
